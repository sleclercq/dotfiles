# Reattach to user namespace
set-option -g default-command "reattach-to-user-namespace -l zsh"
# Use a better prefix
set -g prefix C-q
unbind C-b
# Pass through prefix to app if hit twice
bind C-q send-prefix

# Remove delay after entering command (can interfere with programs such as vi)
set -sg escape-time 1

# Use saner window/pane indexes
set -g base-index 1
setw -g pane-base-index 1

# Reload conf at will
bind r source-file ~/.tmux.conf \; display "Reloaded configuration!"

# Use saner split windows keybindings
bind | split-window -h
unbind %
bind - split-window -v
unbind '"'

# vi style bindings
# pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# window navigation
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# window resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# (don't) use the mouse
#setw -g mode-mouse off
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on
# Mouse for tmux 2.1+
set -g mouse on

# colors O_O
set -g default-terminal "screen-256color"
# status bar
set -g status-fg white
set -g status-bg black
# window status
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
# pane border
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow
# command line
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# status bar customization (not very interesting right now)
set -g status-left-length 40
set -g status-left "#[fg-green]Session: #S #[fg-yellow]#I #[fg-cyan]#P"
set -g status-right "#[fg-cyan]%d %b %R"
# status-utf8 is no longer required
# set -g status-utf8 on
set -g status-interval 60
set -g status-justify centre

# Identify activity on other windows
setw -g monitor-activity on
set -g visual-activity on

# use vi style keys
setw -g mode-keys vi

# sane shortcut for azerty keyboard for copy-mode
bind Ã¹ copy-mode
bind % paste-buffer
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi r send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi 'Enter' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# TODO ca ne semble pas fonctionner
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

unbind Up
bind Up new-window -d -n tmp\; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# TODO tmux
# 1) Faire fonctionner le C-c C-v
# 2) Verifier les bindings vi pour le copy-mode (v, y, p)

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# Works really bad with oh my zsh / oh my git
# set -g @plugin 'Morantron/tmux-fingers'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

run-shell "powerline-daemon -q"
source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


